{"ast":null,"code":"var _jsxFileName = \"/Users/kristo/kristos-closet/client/closet-app/src/components/ImageUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uploadImageAndMetaData } from '../features/uploadSlice';\nimport { selectUser, userIsAuthenticated } from '../features/userSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUploader = () => {\n  _s();\n  const dispatch = useDispatch();\n  const userAuthenticated = useSelector(userIsAuthenticated);\n  const user = useSelector(selectUser);\n  const [category, setCategory] = useState('');\n  const [isUserImage, setIsUserImage] = useState(false);\n  const handleFileUpload = event => {\n    const uploadedFile = event.target.files[0];\n    console.log(\"uploadedFile\", uploadedFile);\n    setImageFile(uploadedFile);\n  };\n  const [imageFile, setImageFile] = useState(null);\n  const classifyImage = async () => {\n    if (!userAuthenticated) {\n      alert('You need to be logged in to upload an image.');\n      return;\n    }\n    if (!imageFile) {\n      alert('Please choose an image file.');\n      return;\n    }\n    console.log(\"front end imageFile\", imageFile);\n    const dbFormData = new FormData();\n    dbFormData.append('user', user);\n    dbFormData.append('category', category);\n    dbFormData.append('isUserImage', isUserImage);\n    console.log(\"user in frontend\", user);\n    console.log(\"dbFormData in front\", dbFormData);\n    dispatch(uploadImageAndMetaData({\n      imageFile,\n      dbFormData\n    }));\n\n    // Clear the selected file and other inputs\n    setImageFile(null);\n    setCategory('');\n    setIsUserImage(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"imageForm\",\n        method: \"post\",\n        encType: \"multipart/form-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"category\",\n          children: \"Category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"category\",\n          value: category,\n          onChange: e => setCategory(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Top\",\n            children: \"Top\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Bottom\",\n            children: \"Bottom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"onePiece\",\n            children: \"One-piece\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Shoes\",\n            children: \"Shoes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Hat\",\n            children: \"Hat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Accessory\",\n            children: \"Accessory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"choose-file\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"uploadedFile\",\n            name: \"uploadedFile\",\n            accept: \".jpg,.jpeg,.png,.gif\",\n            onChange: handleFileUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), \"Choose File\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"classify-button\",\n          id: \"classifyButton\",\n          type: \"button\",\n          onClick: classifyImage,\n          children: \"Upload Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"resultLabel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"imageContainer\",\n      children: imageFile && /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"uploadedImage\",\n        alt: \"Uploaded\",\n        src: URL.createObjectURL(imageFile)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUploader, \"MoxnoCdIo0F7nR+TqDG5tRQuA0Y=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = ImageUploader;\nexport default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","uploadImageAndMetaData","selectUser","userIsAuthenticated","jsxDEV","_jsxDEV","ImageUploader","_s","dispatch","userAuthenticated","user","category","setCategory","isUserImage","setIsUserImage","handleFileUpload","event","uploadedFile","target","files","console","log","setImageFile","imageFile","classifyImage","alert","dbFormData","FormData","append","children","className","id","method","encType","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","type","name","accept","onClick","alt","src","URL","createObjectURL","_c","$RefreshReg$"],"sources":["/Users/kristo/kristos-closet/client/closet-app/src/components/ImageUploader.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uploadImageAndMetaData } from '../features/uploadSlice'; \nimport { selectUser, userIsAuthenticated } from '../features/userSlice';\n\nconst ImageUploader = () => {\n  const dispatch = useDispatch();\n  const userAuthenticated = useSelector(userIsAuthenticated);\n  const user = useSelector(selectUser);\n\n  const [category, setCategory] = useState('');\n  const [isUserImage, setIsUserImage] = useState(false);\n\n  const handleFileUpload = (event) => {\n    const uploadedFile = event.target.files[0];\n    console.log(\"uploadedFile\", uploadedFile);\n    setImageFile(uploadedFile);\n  };\n\n  const [imageFile, setImageFile] = useState(null);\n\n  const classifyImage = async () => {\n    if (!userAuthenticated) { \n      alert('You need to be logged in to upload an image.');\n      return;\n    }\n\n    if (!imageFile) {\n      alert('Please choose an image file.');\n      return;\n    }\n\n    console.log(\"front end imageFile\", imageFile);\n\n    const dbFormData = new FormData();\n    dbFormData.append('user', user);\n    dbFormData.append('category', category);\n    dbFormData.append('isUserImage', isUserImage);\n\n    console.log(\"user in frontend\", user);\n    console.log(\"dbFormData in front\", dbFormData);\n\n    dispatch(uploadImageAndMetaData({imageFile, dbFormData})); \n\n    // Clear the selected file and other inputs\n    setImageFile(null);\n    setCategory('');\n    setIsUserImage(false);\n  };\n\n  return (\n    <div>\n      <div className=\"upload-container\">\n        <form id=\"imageForm\" method=\"post\" encType=\"multipart/form-data\">\n          <label htmlFor=\"category\">Category:</label>\n          <select\n            id=\"category\"\n            value={category}\n            onChange={(e) => setCategory(e.target.value)}\n          >\n            <option value=\"Top\">Top</option>\n            <option value=\"Bottom\">Bottom</option>\n            <option value=\"onePiece\">One-piece</option>\n            <option value=\"Shoes\">Shoes</option>\n            <option value=\"Hat\">Hat</option>\n            <option value=\"Accessory\">Accessory</option>\n          </select>\n          <label className=\"choose-file\">\n            <input\n              type=\"file\"\n              id=\"uploadedFile\"\n              name=\"uploadedFile\"\n              accept=\".jpg,.jpeg,.png,.gif\"\n              onChange={handleFileUpload}\n            />\n            Choose File\n          </label>\n          <button\n            className=\"classify-button\"\n            id=\"classifyButton\"\n            type=\"button\"\n            onClick={classifyImage}\n          >\n            Upload Image\n          </button>\n        </form>\n      </div>\n\n      <p id=\"resultLabel\"></p>\n\n      <div id=\"imageContainer\">\n        {imageFile && <img id=\"uploadedImage\" alt=\"Uploaded\" src={URL.createObjectURL(imageFile)} />}\n      </div>\n    </div>\n  );\n};\n\nexport default ImageUploader;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
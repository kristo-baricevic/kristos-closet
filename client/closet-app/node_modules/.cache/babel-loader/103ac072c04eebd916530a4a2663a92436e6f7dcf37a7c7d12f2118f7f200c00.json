{"ast":null,"code":"import axios from \"axios\";\nexport const setAuthentication = isAuthenticated => ({\n  type: 'SET_AUTHENTICATION',\n  payload: isAuthenticated\n});\nexport const setUser = user => ({\n  type: 'SET_USER',\n  payload: user\n});\nexport const clearAuthentication = () => ({\n  type: 'CLEAR_AUTHENTICATION'\n});\nexport const showLoginModal = () => ({\n  type: 'SET_LOGIN_MODAL_VISIBLE',\n  payload: true\n});\nexport const closeLoginModal = () => ({\n  type: 'SET_LOGIN_MODAL_VISIBLE',\n  payload: false\n});\nexport const showRegistrationModal = () => ({\n  type: 'SET_REGISTRATION_MODAL_VISIBLE',\n  payload: true\n});\nexport const closeRegistrationModal = () => ({\n  type: 'SET_REGISTRATION_MODAL_VISIBLE',\n  payload: false\n});\nexport const setRegistrationModalVisible = visible => ({\n  type: 'SET_REGISTRATION_MODAL_VISIBLE',\n  payload: visible\n});\nexport const setLoginModalVisible = visible => ({\n  type: 'SET_LOGIN_MODAL_VISIBLE',\n  payload: visible\n});\nexport const loginUser = userData => {\n  return async dispatch => {\n    try {\n      console.log(\"inside login try\");\n      const response = await axios.post('http://localhost:5000/api/login', userData);\n      if (response.status === 200) {\n        dispatch({\n          type: 'LOGIN_USER_SUCCESS',\n          payload: response.data\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: 'LOGIN_USER_ERROR',\n        payload: error.message\n      });\n    }\n  };\n};\nexport const loginSuccess = user => ({\n  type: 'LOGIN_USER_SUCCESS',\n  payload: user\n});\nexport const logoutUser = () => ({\n  type: 'LOGOUT_USER'\n});\nexport const registerUser = userData => {\n  console.log(\"registerUser has run\");\n  return async dispatch => {\n    try {\n      console.log(\"userData about to post\");\n      const response = await axios.post('http://localhost:5000/api/register', userData);\n      console.log(\"userData posted\");\n      if (response.status === 201) {\n        dispatch({\n          type: 'REGISTER_USER_SUCCESS',\n          payload: response.data\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: 'REGISTER_USER_ERROR',\n        payload: error.message\n      });\n    }\n  };\n};\nexport const loginAnonymous = () => async dispatch => {\n  try {\n    const response = await axios.post('http://localhost:5000/api/register');\n    console.log('Response data:', response.data);\n    const isAuthenticated = response.data.isAuthenticated;\n    const user = response.data.user;\n    const token = response.data.token;\n\n    // Save token in local storage\n    localStorage.setItem('token', token);\n\n    // Include JWT token\n    const headers = {\n      Authorization: `Bearer ${token}`\n    };\n\n    // Make another request to the backend with the JWT token included\n    const userResponse = await axios.get('/backend/User/current', {\n      headers: headers\n    });\n    const authenticatedUser = userResponse.data;\n    console.log('Authenticated user: ', authenticatedUser);\n\n    // Dispatch actions to update the Redux store\n    dispatch({\n      type: 'SET_AUTHENTICATION',\n      payload: isAuthenticated\n    });\n    dispatch({\n      type: 'SET_USER',\n      payload: user\n    });\n  } catch (error) {\n    // Handle login error\n    console.error('Login failed:', error);\n  }\n};","map":{"version":3,"names":["axios","setAuthentication","isAuthenticated","type","payload","setUser","user","clearAuthentication","showLoginModal","closeLoginModal","showRegistrationModal","closeRegistrationModal","setRegistrationModalVisible","visible","setLoginModalVisible","loginUser","userData","dispatch","console","log","response","post","status","data","error","message","loginSuccess","logoutUser","registerUser","loginAnonymous","token","localStorage","setItem","headers","Authorization","userResponse","get","authenticatedUser"],"sources":["/Users/kristo/kristos-closet/client/closet-app/src/store/actions.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const setAuthentication = (isAuthenticated) => ({\n    type: 'SET_AUTHENTICATION',\n    payload: isAuthenticated,\n  });\n  \n  export const setUser = (user) => ({\n    type: 'SET_USER',\n    payload: user,\n  });\n  \n  export const clearAuthentication = () => ({\n    type: 'CLEAR_AUTHENTICATION',\n  });\n  \n  export const showLoginModal = () => ({\n    type: 'SET_LOGIN_MODAL_VISIBLE',\n    payload: true,\n  });\n  \n  export const closeLoginModal = () => ({\n    type: 'SET_LOGIN_MODAL_VISIBLE',\n    payload: false,\n  });\n  \n  export const showRegistrationModal = () => ({\n    type: 'SET_REGISTRATION_MODAL_VISIBLE',\n    payload: true,\n  });\n  \n  export const closeRegistrationModal = () => ({\n    type: 'SET_REGISTRATION_MODAL_VISIBLE',\n    payload: false,\n  });\n\n  export const setRegistrationModalVisible = (visible) => ({\n    type: 'SET_REGISTRATION_MODAL_VISIBLE',\n    payload: visible,\n  });\n  \n  export const setLoginModalVisible = (visible) => ({\n    type: 'SET_LOGIN_MODAL_VISIBLE',\n    payload: visible,\n  });\n\n  export const loginUser = (userData) => {\n    return async (dispatch) => {\n      try {\n        console.log(\"inside login try\");\n        const response = await axios.post('http://localhost:5000/api/login', userData);\n\n        if (response.status === 200) {\n          dispatch({\n            type: 'LOGIN_USER_SUCCESS',\n            payload: response.data,\n          });\n        }\n      } catch (error) {\n        dispatch({\n          type: 'LOGIN_USER_ERROR',\n          payload: error.message,\n        });        \n      }\n    };\n  };\n  \n  export const loginSuccess = (user) => ({\n    type: 'LOGIN_USER_SUCCESS',\n    payload: user,\n  });\n\n  export const logoutUser = () => ({\n    type: 'LOGOUT_USER', \n  });\n\n  export const registerUser = (userData) => {\n    console.log(\"registerUser has run\");\n    return async (dispatch) => {\n      try {\n        console.log(\"userData about to post\");\n        const response = await axios.post('http://localhost:5000/api/register', userData);\n        console.log(\"userData posted\");\n  \n        if (response.status === 201) {\n          dispatch({\n            type: 'REGISTER_USER_SUCCESS',\n            payload: response.data,\n          });\n        }\n      } catch (error) {\n        dispatch({\n          type: 'REGISTER_USER_ERROR',\n          payload: error.message,\n        });\n      }\n    };\n  };\n  \n\n  export const loginAnonymous = () => async (dispatch) => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/register');\n      console.log('Response data:', response.data);\n  \n      const isAuthenticated = response.data.isAuthenticated;\n      const user = response.data.user;\n      const token = response.data.token;\n  \n      // Save token in local storage\n      localStorage.setItem('token', token);\n  \n      // Include JWT token\n      const headers = {\n        Authorization: `Bearer ${token}`,\n      };\n  \n      // Make another request to the backend with the JWT token included\n      const userResponse = await axios.get('/backend/User/current', {\n        headers: headers,\n      });\n  \n      const authenticatedUser = userResponse.data;\n      console.log('Authenticated user: ', authenticatedUser);\n  \n      // Dispatch actions to update the Redux store\n      dispatch({ type: 'SET_AUTHENTICATION', payload: isAuthenticated });\n      dispatch({ type: 'SET_USER', payload: user });\n    } catch (error) {\n      // Handle login error\n      console.error('Login failed:', error);\n    }\n  };\n  \n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
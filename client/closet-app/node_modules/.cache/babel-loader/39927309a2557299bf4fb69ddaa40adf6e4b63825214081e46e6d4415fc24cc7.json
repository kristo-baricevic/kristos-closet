{"ast":null,"code":"import axios from \"axios\";\n\n//set authentication status\nexport const setAuthentication = isAuthenticated => ({\n  type: 'SET_AUTHENTICATION',\n  payload: isAuthenticated\n});\n\n//set user data\nexport const setUser = user => ({\n  type: 'SET_USER',\n  payload: user\n});\n\n//clear authentication status  \nexport const clearAuthentication = () => ({\n  type: 'CLEAR_AUTHENTICATION'\n});\n\n//manage modals\nexport const showLoginModal = () => ({\n  type: 'SET_LOGIN_MODAL_VISIBLE',\n  payload: true\n});\nexport const closeLoginModal = () => ({\n  type: 'SET_LOGIN_MODAL_VISIBLE',\n  payload: false\n});\nexport const showRegistrationModal = () => ({\n  type: 'SET_REGISTRATION_MODAL_VISIBLE',\n  payload: true\n});\nexport const closeRegistrationModal = () => ({\n  type: 'SET_REGISTRATION_MODAL_VISIBLE',\n  payload: false\n});\nexport const setRegistrationModalVisible = visible => ({\n  type: 'SET_REGISTRATION_MODAL_VISIBLE',\n  payload: visible\n});\nexport const setLoginModalVisible = visible => ({\n  type: 'SET_LOGIN_MODAL_VISIBLE',\n  payload: visible\n});\n\n// upload action types\nexport const UPLOAD_IMAGE_REQUEST = 'UPLOAD_IMAGE_REQUEST';\nexport const UPLOAD_IMAGE_SUCCESS = 'UPLOAD_IMAGE_SUCCESS';\nexport const UPLOAD_IMAGE_FAILURE = 'UPLOAD_IMAGE_FAILURE';\n\n// Thunk action to log in user\nexport const loginUser = userData => {\n  return async dispatch => {\n    try {\n      console.log(\"inside login try\");\n      const response = await axios.post('http://localhost:5000/api/login', userData);\n      const isAuthenticated = response.data.isAuthenticated;\n      const user = response.data.user;\n      const token = response.data.token;\n\n      // Save token in local storage\n      localStorage.setItem('token', token);\n\n      // Include JWT token\n      const headers = {\n        Authorization: `Bearer ${token}`\n      };\n      dispatch({\n        type: 'SET_AUTHENTICATION',\n        payload: isAuthenticated\n      });\n      dispatch({\n        type: 'SET_USER',\n        payload: user\n      });\n      if (response.status === 200) {\n        const user = response.data.user;\n        console.log(\"user data\", user);\n        dispatch(loginSuccess(user));\n        return console.log(user);\n      }\n    } catch (error) {\n      dispatch({\n        type: 'LOGIN_USER_ERROR',\n        payload: error.message\n      });\n    }\n  };\n};\n\n// action creator fo successful login\nexport const loginSuccess = user => ({\n  type: 'LOGIN_USER_SUCCESS',\n  payload: user\n});\n\n// action creator fo successful logout\nexport const logoutUser = () => ({\n  type: 'LOGOUT_USER'\n});\n\n// Thunk action to register user\nexport const registerUser = userData => {\n  console.log(\"registerUser has run\");\n  return async dispatch => {\n    try {\n      console.log(\"userData about to post\");\n      const response = await axios.post('http://localhost:5000/api/register', userData);\n      console.log(\"userData posted\");\n      if (response.status === 201) {\n        dispatch({\n          type: 'REGISTER_USER_SUCCESS',\n          payload: response.data\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: 'REGISTER_USER_ERROR',\n        payload: error.message\n      });\n    }\n  };\n};\n\n// Thunk action to perform anonymous login\nexport const loginAnonymous = () => async dispatch => {\n  try {\n    const response = await axios.post('http://localhost:5000/api/loginAnonymous');\n    console.log('Response data:', response.data);\n    const isAuthenticated = response.data.isAuthenticated;\n    const user = response.data.user;\n    const token = response.data.token;\n\n    // Save token in local storage\n    localStorage.setItem('token', token);\n\n    // Include JWT token\n    const headers = {\n      Authorization: `Bearer ${token}`\n    };\n\n    // Dispatch actions to update the Redux store\n    dispatch({\n      type: 'SET_AUTHENTICATION',\n      payload: isAuthenticated\n    });\n    dispatch({\n      type: 'SET_USER',\n      payload: user\n    });\n  } catch (error) {\n    // Handle login error\n    console.error('Login failed:', error);\n  }\n};\n\n// Action creators for image upload\nexport const uploadImageRequest = () => ({\n  type: UPLOAD_IMAGE_REQUEST\n});\nexport const uploadImageSuccess = () => ({\n  type: UPLOAD_IMAGE_SUCCESS\n});\nexport const uploadImageFailure = error => ({\n  type: UPLOAD_IMAGE_FAILURE,\n  error\n});\n\n// Thunk action to upload an image\nexport const uploadImage = formData => async dispatch => {\n  dispatch(uploadImageRequest());\n  try {\n    const token = localStorage.getItem('token');\n    console.log(\"token in upload image in actions.js\", token);\n    const headers = {\n      'Authorization': `Bearer ${token}`\n    };\n    console.log(\"token is\", token);\n    await axios.post('http://localhost:5000/api/upload', formData, {\n      headers\n    });\n    dispatch(uploadImageSuccess());\n  } catch (error) {\n    dispatch(uploadImageFailure(error));\n  }\n};","map":{"version":3,"names":["axios","setAuthentication","isAuthenticated","type","payload","setUser","user","clearAuthentication","showLoginModal","closeLoginModal","showRegistrationModal","closeRegistrationModal","setRegistrationModalVisible","visible","setLoginModalVisible","UPLOAD_IMAGE_REQUEST","UPLOAD_IMAGE_SUCCESS","UPLOAD_IMAGE_FAILURE","loginUser","userData","dispatch","console","log","response","post","data","token","localStorage","setItem","headers","Authorization","status","loginSuccess","error","message","logoutUser","registerUser","loginAnonymous","uploadImageRequest","uploadImageSuccess","uploadImageFailure","uploadImage","formData","getItem"],"sources":["/Users/kristo/kristos-closet/client/closet-app/src/store/actions.js"],"sourcesContent":["import axios from \"axios\";\n\n\n//set authentication status\nexport const setAuthentication = (isAuthenticated) => ({\n    type: 'SET_AUTHENTICATION',\n    payload: isAuthenticated,\n  });\n\n//set user data\nexport const setUser = (user) => ({\n  type: 'SET_USER',\n  payload: user,\n});\n\n//clear authentication status  \nexport const clearAuthentication = () => ({\n  type: 'CLEAR_AUTHENTICATION',\n});\n  \n//manage modals\nexport const showLoginModal = () => ({\n  type: 'SET_LOGIN_MODAL_VISIBLE',\n  payload: true,\n});\n  \nexport const closeLoginModal = () => ({\n  type: 'SET_LOGIN_MODAL_VISIBLE',\n  payload: false,\n});\n  \nexport const showRegistrationModal = () => ({\n  type: 'SET_REGISTRATION_MODAL_VISIBLE',\n  payload: true,\n});\n  \nexport const closeRegistrationModal = () => ({\n  type: 'SET_REGISTRATION_MODAL_VISIBLE',\n  payload: false,\n});\n\nexport const setRegistrationModalVisible = (visible) => ({\n  type: 'SET_REGISTRATION_MODAL_VISIBLE',\n  payload: visible,\n});\n  \nexport const setLoginModalVisible = (visible) => ({\n  type: 'SET_LOGIN_MODAL_VISIBLE',\n  payload: visible,\n});\n\n// upload action types\nexport const UPLOAD_IMAGE_REQUEST = 'UPLOAD_IMAGE_REQUEST';\nexport const UPLOAD_IMAGE_SUCCESS = 'UPLOAD_IMAGE_SUCCESS';\nexport const UPLOAD_IMAGE_FAILURE = 'UPLOAD_IMAGE_FAILURE';\n\n// Thunk action to log in user\nexport const loginUser = (userData) => {\n  return async (dispatch) => {\n    try {\n      console.log(\"inside login try\");\n      const response = await axios.post('http://localhost:5000/api/login', userData);\n\n      const isAuthenticated = response.data.isAuthenticated;\n      const user = response.data.user;\n      const token = response.data.token;\n\n      // Save token in local storage\n      localStorage.setItem('token', token);\n\n      // Include JWT token\n      const headers = {\n        Authorization: `Bearer ${token}`,\n      };\n\n      dispatch({ type: 'SET_AUTHENTICATION', payload: isAuthenticated });\n      dispatch({ type: 'SET_USER', payload: user });\n\n      if (response.status === 200) {\n        const user = response.data.user;\n        console.log(\"user data\", user);\n        dispatch(loginSuccess(user));\n        return console.log(user);\n      }\n    } catch (error) {\n      dispatch({\n        type: 'LOGIN_USER_ERROR',\n        payload: error.message,\n      });        \n    }\n  };\n};\n  \n// action creator fo successful login\nexport const loginSuccess = (user) => ({\n  type: 'LOGIN_USER_SUCCESS',\n  payload: user,\n});\n\n// action creator fo successful logout\nexport const logoutUser = () => ({\n  type: 'LOGOUT_USER', \n});\n\n// Thunk action to register user\nexport const registerUser = (userData) => {\n  console.log(\"registerUser has run\");\n  return async (dispatch) => {\n    try {\n      console.log(\"userData about to post\");\n      const response = await axios.post('http://localhost:5000/api/register', userData);\n      console.log(\"userData posted\");\n  \n      if (response.status === 201) {\n        dispatch({\n          type: 'REGISTER_USER_SUCCESS',\n          payload: response.data,\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: 'REGISTER_USER_ERROR',\n        payload: error.message,\n      });\n    }\n  };\n};\n\n// Thunk action to perform anonymous login\nexport const loginAnonymous = () => async (dispatch) => {\n  try {\n    const response = await axios.post('http://localhost:5000/api/loginAnonymous');\n    console.log('Response data:', response.data);\n\n    const isAuthenticated = response.data.isAuthenticated;\n    const user = response.data.user;\n    const token = response.data.token;\n\n    // Save token in local storage\n    localStorage.setItem('token', token);\n\n    // Include JWT token\n    const headers = {\n      Authorization: `Bearer ${token}`,\n    };\n  \n    // Dispatch actions to update the Redux store\n    dispatch({ type: 'SET_AUTHENTICATION', payload: isAuthenticated });\n    dispatch({ type: 'SET_USER', payload: user });\n  } catch (error) {\n    // Handle login error\n    console.error('Login failed:', error);\n  }\n};\n\n// Action creators for image upload\nexport const uploadImageRequest = () => ({\n  type: UPLOAD_IMAGE_REQUEST,\n});\n\nexport const uploadImageSuccess = () => ({\n  type: UPLOAD_IMAGE_SUCCESS,\n});\n\nexport const uploadImageFailure = error => ({\n  type: UPLOAD_IMAGE_FAILURE,\n  error,\n});\n\n// Thunk action to upload an image\nexport const uploadImage = (formData) => async dispatch => {\n  dispatch(uploadImageRequest());\n\n  try {\n    const token = localStorage.getItem('token');\n    console.log(\"token in upload image in actions.js\", token);\n    const headers = {\n      'Authorization': `Bearer ${token}`,\n    };\n\n    console.log(\"token is\", token);\n\n    await axios.post('http://localhost:5000/api/upload', formData, { headers });\n\n    dispatch(uploadImageSuccess());\n  } catch (error) {\n    dispatch(uploadImageFailure(error));\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  top: null,\n  bottom: null,\n  shoes: null,\n  hat: null,\n  onePiece: null,\n  accessories: []\n};\nconst selectedItemsSlice = createSlice({\n  name: 'outfitItems',\n  initialState,\n  reducers: {\n    addItem: (state, action) => {\n      const {\n        category,\n        item\n      } = action.payload;\n\n      // Check if adding this item violates the constraints\n      if (!isValidAddition(state, category, item)) {\n        console.error('Invalid addition:', category, item);\n        return;\n      }\n\n      // If item is a 'onePiece', remove 'top' and 'bottom' from the state\n      if (item.category === 'onePiece') {\n        state.top = null;\n        state.bottom = null;\n      } else if (item.category === 'top' || item.category === 'bottom') {\n        // If item is 'top' or 'bottom', remove 'onePiece' from the state\n        state.onePiece = null;\n      }\n\n      // Ensure that only up to three accessories can be added\n      if (category === 'accessories' && state.accessories.length >= 3) {\n        console.error('Too many accessories:', state.accessories);\n        return;\n      }\n\n      // Update the state with the new item for the specified category\n      state[category] = item;\n    },\n    removeItem: (state, action) => {\n      const {\n        category,\n        itemId\n      } = action.payload;\n\n      // Update the state by removing the item from the specified category\n      state[category] = state[category].filter(item => item.id !== itemId);\n    }\n  }\n});\n\n// Function to check if adding a certain item is valid based on constraints\nfunction isValidAddition(state, category, newItem) {\n  if (category === 'accessories' && state.accessories.length >= 3) {\n    console.error('too many accessories');\n    return false; // Too many accessories\n  }\n\n  if (newItem.category === 'onePiece') {\n    return !state.top && !state.bottom;\n  }\n  if (newItem.category === 'top' || newItem.category === 'bottom') {\n    return !state.onePiece;\n  }\n  return true;\n}\nexport const selectedOutfitItems = state => state.selectedItems.images;\nexport const SelectedOutfitItemsLoading = state => state.selectedItems.loading;\n_c = SelectedOutfitItemsLoading;\nexport const SelectedOutfitItemsError = state => state.selectedItems.error;\n_c2 = SelectedOutfitItemsError;\nexport const {\n  addItem,\n  removeItem\n} = selectedItemsSlice.actions;\nexport const selectedItemsSliceReducer = selectedItemsSlice.reducers;\nvar _c, _c2;\n$RefreshReg$(_c, \"SelectedOutfitItemsLoading\");\n$RefreshReg$(_c2, \"SelectedOutfitItemsError\");","map":{"version":3,"names":["createSlice","initialState","top","bottom","shoes","hat","onePiece","accessories","selectedItemsSlice","name","reducers","addItem","state","action","category","item","payload","isValidAddition","console","error","length","removeItem","itemId","filter","id","newItem","selectedOutfitItems","selectedItems","images","SelectedOutfitItemsLoading","loading","_c","SelectedOutfitItemsError","_c2","actions","selectedItemsSliceReducer","$RefreshReg$"],"sources":["/Users/kristo/kristos-closet/client/closet-app/src/features/selectedItemsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    top: null,\n    bottom: null,\n    shoes: null,\n    hat: null,\n    onePiece: null,\n    accessories: [],\n}\n\nconst selectedItemsSlice = createSlice({\n  name: 'outfitItems',\n  initialState,\n  reducers: {\n    addItem: (state, action) => {\n        \n        const { category, item } = action.payload;\n\n        // Check if adding this item violates the constraints\n        if (!isValidAddition(state, category, item)) {\n            console.error('Invalid addition:', category, item);\n            return;\n        }\n\n        // If item is a 'onePiece', remove 'top' and 'bottom' from the state\n        if (item.category === 'onePiece') {\n            state.top = null;\n            state.bottom = null;\n        } else if (item.category === 'top' || item.category === 'bottom') {\n            // If item is 'top' or 'bottom', remove 'onePiece' from the state\n            state.onePiece = null;\n        }\n\n        // Ensure that only up to three accessories can be added\n        if (category === 'accessories' && state.accessories.length >= 3) {\n            console.error('Too many accessories:', state.accessories);\n            return;\n        }\n\n        // Update the state with the new item for the specified category\n        state[category] = item;\n    },\n    removeItem: (state, action) => {\n\n      const { category, itemId } = action.payload;\n      \n      // Update the state by removing the item from the specified category\n      state[category] = state[category].filter(item => item.id !== itemId);\n    },\n  },\n});\n\n// Function to check if adding a certain item is valid based on constraints\nfunction isValidAddition(state, category, newItem) {\n  if (category === 'accessories' && state.accessories.length >= 3) {\n    console.error('too many accessories');\n    return false; // Too many accessories\n  }\n\n  if (newItem.category === 'onePiece') {\n    return !state.top && !state.bottom;\n  }\n\n  if (newItem.category === 'top' || newItem.category === 'bottom') {\n    return !state.onePiece;\n  }\n\n  return true;\n}\n\nexport const selectedOutfitItems = (state) => state.selectedItems.images;\nexport const SelectedOutfitItemsLoading = (state) => state.selectedItems.loading;\nexport const SelectedOutfitItemsError = (state) => state.selectedItems.error;\n\nexport const { addItem, removeItem } = selectedItemsSlice.actions;\nexport const selectedItemsSliceReducer = selectedItemsSlice.reducers;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/kristo/kristos-closet/client/closet-app/src/components/LoginModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginUser } from '../store/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginModal = () => {\n  _s();\n  const isLoginModalVisible = useSelector(state => state.isLoginModalVisible);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const handleCloseModal = () => {\n    dispatch({\n      type: 'SET_LOGIN_MODAL_VISIBLE',\n      payload: false\n    });\n    console.log(\"close\");\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      console.log(\"handleLogin ran\");\n      dispatch(login({\n        username: username,\n        password: password\n      }));\n      console.log('dispatch:', userData);\n      handleCloseModal();\n    } catch (error) {\n      console.error('Login failed:', error);\n    }\n    ;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `login-modal ${isLoginModalVisible ? 'visible' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-header\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        onSubmit: e => handleLogin(e),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"login-label\",\n            htmlFor: \"username\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"login-input\",\n            type: \"text\",\n            id: \"username\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"login-label\",\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"login-input\",\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-button\",\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-close-button\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginModal, \"UHOc0ZtoR8T8wnlxrc0nsJS55VI=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = LoginModal;\nexport default LoginModal;\nvar _c;\n$RefreshReg$(_c, \"LoginModal\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","loginUser","jsxDEV","_jsxDEV","LoginModal","_s","isLoginModalVisible","state","username","setUsername","password","setPassword","dispatch","handleCloseModal","type","payload","console","log","handleLogin","e","preventDefault","login","userData","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/kristo/kristos-closet/client/closet-app/src/components/LoginModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginUser } from '../store/actions';\n\nconst LoginModal = () => {\n\n  const isLoginModalVisible = useSelector(state => state.isLoginModalVisible);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n\n  const handleCloseModal = () => {\n    dispatch({ type: 'SET_LOGIN_MODAL_VISIBLE', payload: false });\n    console.log(\"close\");\n  };\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    try {\n      console.log(\"handleLogin ran\");\n\n      dispatch(login({\n        username: username,\n        password: password,\n      }))\n\n      console.log('dispatch:', userData);\n      handleCloseModal();\n      \n    } catch (error) {\n        console.error('Login failed:', error);\n      };\n    };\n\n  return (\n    <div className={`login-modal ${isLoginModalVisible ? 'visible' : ''}`}>\n      <div className=\"login-modal-content\">\n        <h2 className=\"login-header\">Login</h2>\n        <form className=\"login-form\" onSubmit={(e) => handleLogin(e)}>\n          <div className=\"login-form-group\">\n            <label className=\"login-label\" htmlFor=\"username\">Username:</label>\n            <input className=\"login-input\"\n              type=\"text\"\n              id=\"username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n          </div>\n          <div className=\"login-form-group\">\n            <label className=\"login-label\" htmlFor=\"password\">Password:</label>\n            <input className=\"login-input\"\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)} \n            />\n          </div>\n          <button className=\"login-button\" type=\"submit\">Login</button>\n        </form>\n        <button className=\"login-close-button\">Close</button>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
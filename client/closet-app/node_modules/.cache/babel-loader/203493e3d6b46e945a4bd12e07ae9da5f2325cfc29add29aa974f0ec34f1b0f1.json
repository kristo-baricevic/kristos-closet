{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  items: {\n    top: null,\n    bottom: null,\n    shoes: null,\n    hat: null,\n    onePiece: null,\n    accessories: []\n  },\n  loading: false,\n  error: null\n};\nexport const selectedItemsSlice = createSlice({\n  name: 'selectedItems',\n  initialState,\n  reducers: {\n    addItem: (state, action) => {\n      const {\n        category,\n        item\n      } = action.payload;\n      console.log(\"category check\", category);\n      console.log(\"item check\", item);\n      if (!isValidAddition(state, category, item)) {\n        console.error('Invalid addition:', category, item);\n        return state; // Return the unchanged state\n      }\n\n      // Create a new state object by merging the current state with the changes\n      return {\n        ...state,\n        [category]: item,\n        top: item.category === 'onePiece' ? null : state.top,\n        bottom: item.category === 'onePiece' ? null : state.bottom,\n        onePiece: item.category === 'top' || item.category === 'bottom' ? null : state.onePiece,\n        accessories: category === 'accessories' && state.accessories.length < 3 ? [...state.accessories, item] : state.accessories\n      };\n    },\n    removeItem: (state, action) => {\n      const {\n        category,\n        itemId\n      } = action.payload;\n\n      // Update the state by removing the item from the specified category\n      state[category] = state[category].filter(item => item.id !== itemId);\n    }\n  }\n});\n\n// Function to check if adding a certain item is valid based on constraints\nfunction isValidAddition(state, category, newItem) {\n  if (category === 'accessories' && state.accessories.length >= 3) {\n    console.error('too many accessories');\n    return false; // Too many accessories\n  }\n\n  if (newItem.category === 'onePiece') {\n    return !state.top && !state.bottom;\n  }\n  if (newItem.category === 'top' || newItem.category === 'bottom') {\n    return !state.onePiece;\n  }\n  return true;\n}\nexport const selectedItems = state => state.selectedItems.items;\nexport const selectedItemsLoading = state => state.selectedItems.loading;\nexport const selectedItemsError = state => state.selectedItems.error;\nexport const {\n  addItem,\n  removeItem\n} = selectedItemsSlice.actions;\nexport const selectedItemsSliceReducer = selectedItemsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","items","top","bottom","shoes","hat","onePiece","accessories","loading","error","selectedItemsSlice","name","reducers","addItem","state","action","category","item","payload","console","log","isValidAddition","length","removeItem","itemId","filter","id","newItem","selectedItems","selectedItemsLoading","selectedItemsError","actions","selectedItemsSliceReducer","reducer"],"sources":["/Users/kristo/kristos-closet/client/closet-app/src/features/selectedItemsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    items: {\n      top: null,\n      bottom: null,\n      shoes: null,\n      hat: null,\n      onePiece: null,\n      accessories: [],\n  },\n  loading: false,\n  error: null,\n};\n\nexport const selectedItemsSlice = createSlice({\n  name: 'selectedItems',\n  initialState,\n  reducers: {\n    addItem: (state, action) => {\n      const { category, item } = action.payload;\n      console.log(\"category check\", category);\n      console.log(\"item check\", item);\n  \n      if (!isValidAddition(state, category, item)) {\n          console.error('Invalid addition:', category, item);\n          return state; // Return the unchanged state\n      }\n  \n      // Create a new state object by merging the current state with the changes\n      return {\n          ...state,\n          [category]: item,\n          top: item.category === 'onePiece' ? null : state.top,\n          bottom: item.category === 'onePiece' ? null : state.bottom,\n          onePiece: (item.category === 'top' || item.category === 'bottom') ? null : state.onePiece,\n          accessories: (category === 'accessories' && state.accessories.length < 3)\n              ? [...state.accessories, item]\n              : state.accessories,\n      };\n  },  \n    removeItem: (state, action) => {\n\n      const { category, itemId } = action.payload;\n      \n      // Update the state by removing the item from the specified category\n      state[category] = state[category].filter(item => item.id !== itemId);\n    },\n  },\n});\n\n// Function to check if adding a certain item is valid based on constraints\nfunction isValidAddition(state, category, newItem) {\n  if (category === 'accessories' && state.accessories.length >= 3) {\n    console.error('too many accessories');\n    return false; // Too many accessories\n  }\n\n  if (newItem.category === 'onePiece') {\n    return !state.top && !state.bottom;\n  }\n\n  if (newItem.category === 'top' || newItem.category === 'bottom') {\n    return !state.onePiece;\n  }\n\n  return true;\n}\n\nexport const selectedItems = (state) => state.selectedItems.items;\nexport const selectedItemsLoading = (state) => state.selectedItems.loading;\nexport const selectedItemsError = (state) => state.selectedItems.error;\n\nexport const { addItem, removeItem } = selectedItemsSlice.actions;\nexport const selectedItemsSliceReducer = selectedItemsSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/kristo/kristos-closet/client/closet-app/src/components/LoginModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginUser } from '../store/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginModal = () => {\n  _s();\n  const dispatch = useDispatch();\n  const isLoginModalVisible = useSelector(state => state.isLoginModalVisible);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleCloseModal = () => {\n    dispatch({\n      type: 'SET_LOGIN_MODAL_VISIBLE',\n      payload: false\n    });\n    console.log(\"close\");\n  };\n  const handleLogin = async () => {\n    try {\n      console.log(\"handleLogin ran\");\n      const userData = {\n        username,\n        password\n      };\n      await dispatch(loginUser(userData));\n      console.log('dispatch:', userData);\n      handleCloseModal();\n    } catch (error) {\n      console.error('Login failed:', error);\n    }\n    ;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `login-modal ${isLoginModalVisible ? 'visible' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-header\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"login-label\",\n            htmlFor: \"username\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"login-input\",\n            type: \"text\",\n            id: \"username\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"login-label\",\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"login-input\",\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-button\",\n          type: \"button\",\n          onClick: handleLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-close-button\",\n        onClick: handleCloseModal,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginModal, \"WIyNEZbVWi/GB/ysmGWxYxxz1ks=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = LoginModal;\nexport default LoginModal;\nvar _c;\n$RefreshReg$(_c, \"LoginModal\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","loginUser","jsxDEV","_jsxDEV","LoginModal","_s","dispatch","isLoginModalVisible","state","username","setUsername","password","setPassword","handleCloseModal","type","payload","console","log","handleLogin","userData","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","required","onClick","_c","$RefreshReg$"],"sources":["/Users/kristo/kristos-closet/client/closet-app/src/components/LoginModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginUser } from '../store/actions';\n\nconst LoginModal = () => {\n\n  const dispatch = useDispatch();\n  const isLoginModalVisible = useSelector(state => state.isLoginModalVisible);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n\n  const handleCloseModal = () => {\n    dispatch({ type: 'SET_LOGIN_MODAL_VISIBLE', payload: false });\n    console.log(\"close\");\n  };\n\n  const handleLogin = async () => {\n    try {\n      console.log(\"handleLogin ran\");\n      const userData = {\n        username,\n        password,\n      };\n\n      await dispatch(loginUser(userData));\n      console.log('dispatch:', userData);\n      handleCloseModal();\n    } catch (error) {\n        console.error('Login failed:', error);\n      };\n    };\n\n  return (\n    <div className={`login-modal ${isLoginModalVisible ? 'visible' : ''}`}>\n      <div className=\"login-modal-content\">\n        <h2 className=\"login-header\">Login</h2>\n        <form>\n          <div className=\"login-form-group\">\n            <label className=\"login-label\" htmlFor=\"username\">Username:</label>\n            <input className=\"login-input\"\n              type=\"text\"\n              id=\"username\"\n              value={username}\n              onChange={e => setUsername(e.target.value)} required\n            />\n          </div>\n          <div className=\"login-form-group\">\n            <label className=\"login-label\" htmlFor=\"password\">Password:</label>\n            <input className=\"login-input\"\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={e => setPassword(e.target.value)} required\n            />\n          </div>\n          <button className=\"login-button\" type=\"button\" onClick={handleLogin}>Login</button>\n        </form>\n        <button className=\"login-close-button\" onClick={handleCloseModal}>Close</button>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
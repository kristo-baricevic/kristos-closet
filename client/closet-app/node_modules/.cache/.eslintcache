[{"/Users/kristo/kristos-closet/client/closet-app/src/index.js":"1","/Users/kristo/kristos-closet/client/closet-app/src/App.js":"2","/Users/kristo/kristos-closet/client/closet-app/src/seed.js":"3","/Users/kristo/kristos-closet/client/closet-app/src/store/store.js":"4","/Users/kristo/kristos-closet/client/closet-app/src/config/database.js":"5","/Users/kristo/kristos-closet/client/closet-app/src/store/reducers.js":"6","/Users/kristo/kristos-closet/client/closet-app/src/components/OutfitView.js":"7","/Users/kristo/kristos-closet/client/closet-app/src/components/NavBar.js":"8","/Users/kristo/kristos-closet/client/closet-app/src/components/LoginModal.js":"9","/Users/kristo/kristos-closet/client/closet-app/src/components/ImageUploader.js":"10","/Users/kristo/kristos-closet/client/closet-app/src/components/RegistrationModal.js":"11","/Users/kristo/kristos-closet/client/closet-app/src/store/actions.js":"12","/Users/kristo/kristos-closet/client/closet-app/src/components/ClosetView.js":"13","/Users/kristo/kristos-closet/client/closet-app/src/components/DemoButton.js":"14","/Users/kristo/kristos-closet/client/closet-app/src/features/userSlice.js":"15","/Users/kristo/kristos-closet/client/closet-app/src/controllers/authService.js":"16","/Users/kristo/kristos-closet/client/closet-app/src/models/User.js":"17","/Users/kristo/kristos-closet/client/closet-app/src/config/aws-config.js":"18","/Users/kristo/kristos-closet/client/closet-app/src/features/selectedItemsSlice.js":"19"},{"size":402,"mtime":1692212115773,"results":"20","hashOfConfig":"21"},{"size":4677,"mtime":1692212140304,"results":"22","hashOfConfig":"21"},{"size":661,"mtime":1691848643550,"results":"23","hashOfConfig":"21"},{"size":586,"mtime":1692391433160,"results":"24","hashOfConfig":"21"},{"size":1184,"mtime":1691848643548,"results":"25","hashOfConfig":"21"},{"size":2028,"mtime":1692022958419,"results":"26","hashOfConfig":"21"},{"size":5007,"mtime":1692390560944,"results":"27","hashOfConfig":"21"},{"size":1231,"mtime":1691848643547,"results":"28","hashOfConfig":"21"},{"size":1963,"mtime":1691959801107,"results":"29","hashOfConfig":"21"},{"size":2957,"mtime":1692223309936,"results":"30","hashOfConfig":"21"},{"size":2442,"mtime":1691848643548,"results":"31","hashOfConfig":"21"},{"size":5056,"mtime":1692223386961,"results":"32","hashOfConfig":"21"},{"size":9367,"mtime":1692389902504,"results":"33","hashOfConfig":"21"},{"size":380,"mtime":1691848643547,"results":"34","hashOfConfig":"21"},{"size":676,"mtime":1691966146981,"results":"35","hashOfConfig":"21"},{"size":1042,"mtime":1691849993800,"results":"36","hashOfConfig":"21"},{"size":907,"mtime":1691848643550,"results":"37","hashOfConfig":"21"},{"size":203,"mtime":1692210943302,"results":"38","hashOfConfig":"21"},{"size":2122,"mtime":1692455996848,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lkshuj",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kristo/kristos-closet/client/closet-app/src/index.js",[],[],"/Users/kristo/kristos-closet/client/closet-app/src/App.js",["103"],[],"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ImageUploader from './components/ImageUploader';\nimport ClosetView from './components/ClosetView';\nimport OutfitView from './components/OutfitView';\nimport NavBar from './components/NavBar';\nimport RegistrationModal from './components/RegistrationModal';\nimport LoginModal from './components/LoginModal';\nimport { loginUser } from './store/actions';\n\n\nimport './App.css';\n\nconst App = ({ images }) => {\n\n\n  const [isDesktop, setIsDesktop] = useState(false);\n  const isRegistrationModalVisible = useSelector(state => state.isRegistrationModalVisible);\n  const isLoginModalVisible = useSelector(state => state.isLoginModalVisible);\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector(state => state.isAuthenticated);\n  const user = useSelector(state => state.user);\n\n  const [selectedItems, setSelectedItems] = useState({\n    hat: null,\n    top: null,\n    bottom: null,\n    onepiece: null,\n    shoes: null,\n    accessory: [],\n  });\n\n  useEffect(() => {\n    const checkScreenSize = () => {\n      setIsDesktop(window.innerWidth >= 768);\n    };\n    checkScreenSize();\n    window.addEventListener('resize', checkScreenSize);\n    return () => {\n      window.removeEventListener('resize', checkScreenSize);\n    };\n  }, []);\n\n  useEffect(() => {\n    // Fetch user data once the component mounts\n    if (!isAuthenticated) {\n      dispatch(loginUser({ username: 'yourUsername', password: 'yourPassword' }));\n    }\n  }, [dispatch, isAuthenticated]);\n\n  const handleSelectImage = (image) => {\n    const { category } = image;\n\n    if (category.toLowerCase() === 'shoes') {\n      setSelectedItems(prevSelected => ({ ...prevSelected, shoes: image }));\n    } else if (category.toLowerCase() === 'bottom') {\n      setSelectedItems(prevSelected => ({ ...prevSelected, bottom: image, onepiece: null }));\n    } else if (category.toLowerCase() === 'top') {\n      setSelectedItems(prevSelected => ({ ...prevSelected, top: image, onepiece: null }));\n    } else if (category.toLowerCase() === 'hat') {\n      setSelectedItems(prevSelected => ({ ...prevSelected, hat: image }));\n    } else if (category.toLowerCase() === 'accessory') {\n      if (selectedItems.accessory.length < 3) {\n        setSelectedItems(prevSelected => ({ ...prevSelected, accessory: [...prevSelected.accessory, image] }));\n      } else {\n        console.log(\"Too many accessories\");\n      }\n    } else if (category.toLowerCase() === 'onepiece') {\n      setSelectedItems(prevSelected => ({ ...prevSelected, onepiece: image, top: null, bottom: null }));\n    }\n  };\n\n  const handleRemoveItem = (item, category) => {\n    if (category === 'accessory') {\n      setSelectedItems(prevSelected => ({\n        ...prevSelected,\n        accessory: prevSelected.accessory.filter(accessory => accessory !== item),\n      }));\n    } else {\n      setSelectedItems(prevSelected => ({ ...prevSelected, [category]: null }));\n    }\n  };\n\n  const refreshClosetView = async () => {\n    try {\n      // Perform the fetch operation or any data refreshing logic here\n      // const response = await fetch('/backend/Images');\n      // const data = await response.json();\n      // Update state or perform other necessary actions with the data\n      // console.log(\"refreshClosetView has run with updated data:\", data);\n    } catch (error) {\n      console.error(\"Error refreshing closetview:\", error);\n    }\n  };  \n\n  return (\n    <div className=\"body-container\">\n      \n      <NavBar />\n\n      {isRegistrationModalVisible && <RegistrationModal />}\n      {isLoginModalVisible && <LoginModal />}\n\n      <div className=\"image-uploader-container\">\n        <ImageUploader msg=\"Welcome to The Image Uploader!\" onImageUploaded={refreshClosetView} />\n      </div>\n\n      {isDesktop ? (\n        <div className=\"desktop-layout\">\n          <div className=\"closetview-container\">\n            <ClosetView images={images} onSelectImage={handleSelectImage} />\n          </div>\n          <div className=\"outfit-view-container\">\n            <OutfitView selectedItems={selectedItems} onRemoveItem={handleRemoveItem} className=\"outfit-view-desktop\" />\n          </div>\n        </div>\n      ) : (\n        <div className=\"mobile-layout\">\n          <div className=\"closetview-container-mobile\">\n            <ClosetView images={images} onSelectImage={handleSelectImage} />\n          </div>\n          <div className=\"outfit-view-container-mobile\">\n            <OutfitView selectedItems={selectedItems} onRemoveItem={handleRemoveItem} className=\"outfit-view-mobile\" />\n          </div>\n        </div>\n      )}\n\n    </div>\n  );\n};\n\nexport default App;\n","/Users/kristo/kristos-closet/client/closet-app/src/seed.js",[],[],[],"/Users/kristo/kristos-closet/client/closet-app/src/store/store.js",[],[],"/Users/kristo/kristos-closet/client/closet-app/src/config/database.js",[],[],"/Users/kristo/kristos-closet/client/closet-app/src/store/reducers.js",[],[],[],"/Users/kristo/kristos-closet/client/closet-app/src/components/OutfitView.js",[],[],[],"/Users/kristo/kristos-closet/client/closet-app/src/components/NavBar.js",[],[],"/Users/kristo/kristos-closet/client/closet-app/src/components/LoginModal.js",[],[],"/Users/kristo/kristos-closet/client/closet-app/src/components/ImageUploader.js",[],[],"/Users/kristo/kristos-closet/client/closet-app/src/components/RegistrationModal.js",[],[],"/Users/kristo/kristos-closet/client/closet-app/src/store/actions.js",["104"],[],"import axios from \"axios\";\n\n\n//set authentication status\nexport const setAuthentication = (isAuthenticated) => ({\n    type: 'SET_AUTHENTICATION',\n    payload: isAuthenticated,\n  });\n\n//set user data\nexport const setUser = (user) => ({\n  type: 'SET_USER',\n  payload: user,\n});\n\n//clear authentication status  \nexport const clearAuthentication = () => ({\n  type: 'CLEAR_AUTHENTICATION',\n});\n  \n//manage modals\nexport const showLoginModal = () => ({\n  type: 'SET_LOGIN_MODAL_VISIBLE',\n  payload: true,\n});\n  \nexport const closeLoginModal = () => ({\n  type: 'SET_LOGIN_MODAL_VISIBLE',\n  payload: false,\n});\n  \nexport const showRegistrationModal = () => ({\n  type: 'SET_REGISTRATION_MODAL_VISIBLE',\n  payload: true,\n});\n  \nexport const closeRegistrationModal = () => ({\n  type: 'SET_REGISTRATION_MODAL_VISIBLE',\n  payload: false,\n});\n\nexport const setRegistrationModalVisible = (visible) => ({\n  type: 'SET_REGISTRATION_MODAL_VISIBLE',\n  payload: visible,\n});\n  \nexport const setLoginModalVisible = (visible) => ({\n  type: 'SET_LOGIN_MODAL_VISIBLE',\n  payload: visible,\n});\n\n// upload action types\nexport const UPLOAD_IMAGE_REQUEST = 'UPLOAD_IMAGE_REQUEST';\nexport const UPLOAD_IMAGE_SUCCESS = 'UPLOAD_IMAGE_SUCCESS';\nexport const UPLOAD_IMAGE_FAILURE = 'UPLOAD_IMAGE_FAILURE';\n\n// Thunk action to log in user\nexport const loginUser = (userData) => {\n  return async (dispatch) => {\n    try {\n      console.log(\"inside login try\");\n      const response = await axios.post('http://localhost:5000/api/login', userData);\n\n      if (response.status === 200) {\n        const user = response.data.user;\n        const token = response.data.token; \n        console.log(\"user data\", user);\n        console.log(\"token\", token);\n\n        // Set the token in client storage\n        localStorage.setItem('token', token);\n\n        console.log(\"client side token\", token);\n\n        dispatch(loginSuccess(user));\n        return console.log(user);\n      }\n    } catch (error) {\n      dispatch({\n        type: 'LOGIN_USER_ERROR',\n        payload: error.message,\n      });        \n    }\n  };\n};\n\n  \n// action creator fo successful login\nexport const loginSuccess = (user) => ({\n  type: 'LOGIN_USER_SUCCESS',\n  payload: user,\n});\n\n// action creator fo successful logout\nexport const logoutUser = () => ({\n  type: 'LOGOUT_USER', \n});\n\n// Thunk action to register user\nexport const registerUser = (userData) => {\n  console.log(\"registerUser has run\");\n  return async (dispatch) => {\n    try {\n      console.log(\"userData about to post\");\n      const response = await axios.post('http://localhost:5000/api/register', userData);\n      console.log(\"userData posted\");\n  \n      if (response.status === 201) {\n        dispatch({\n          type: 'REGISTER_USER_SUCCESS',\n          payload: response.data,\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: 'REGISTER_USER_ERROR',\n        payload: error.message,\n      });\n    }\n  };\n};\n\n// Thunk action to perform anonymous login\nexport const loginAnonymous = () => async (dispatch) => {\n  try {\n    const response = await axios.post('http://localhost:5000/api/loginAnonymous');\n    // console.log('Response data:', response.data);\n\n    const isAuthenticated = response.data.isAuthenticated;\n    const user = response.data.user;\n    const token = response.data.token;\n\n    // Save token in local storage\n    localStorage.setItem('token', token);\n\n    // Include JWT token\n    const headers = {\n      Authorization: `Bearer ${token}`,\n    };\n  \n    // Dispatch actions to update the Redux store\n    dispatch({ type: 'SET_AUTHENTICATION', payload: isAuthenticated });\n    dispatch({ type: 'SET_USER', payload: user });\n  } catch (error) {\n    // Handle login error\n    console.error('Login failed:', error);\n  }\n};\n\n// Action creators for image upload\nexport const uploadImageRequest = () => ({\n  type: UPLOAD_IMAGE_REQUEST,\n});\n\nexport const uploadImageSuccess = () => ({\n  type: UPLOAD_IMAGE_SUCCESS,\n});\n\nexport const uploadImageFailure = error => ({\n  type: UPLOAD_IMAGE_FAILURE,\n  error,\n});\n\n// Thunk action to upload an image and metadata\nexport const uploadImageAndMetaData = (imageFile, dbFormData) => async (dispatch) => {\n  dispatch(uploadImageRequest());\n  console.log(\"inside action for upload\");\n  try {\n    const token = localStorage.getItem('token');\n    const headers = {\n      'Authorization': `Bearer ${token}`,\n    };\n\n    console.log(\"form data in actions\",dbFormData);\n    console.log(\"imageFile in the actions\", imageFile);\n    \n    // Combine the data for both requests\n    const combinedFormData = new FormData();\n    combinedFormData.append('imageFile', imageFile);\n    for (const [key, value] of dbFormData.entries()) {\n      combinedFormData.append(key, value);\n    }\n\n    console.log(\"combined form data\", combinedFormData);\n\n    // Upload data to backend\n    const uploadPromise = axios.post('http://localhost:5000/api/upload', combinedFormData, { headers });\n\n    await uploadPromise;\n\n    dispatch(uploadImageSuccess());\n  } catch (error) {\n    dispatch(uploadImageFailure(error));\n  }\n};\n","/Users/kristo/kristos-closet/client/closet-app/src/components/ClosetView.js",[],[],"/Users/kristo/kristos-closet/client/closet-app/src/components/DemoButton.js",[],[],"/Users/kristo/kristos-closet/client/closet-app/src/features/userSlice.js",[],[],"/Users/kristo/kristos-closet/client/closet-app/src/controllers/authService.js",[],[],"/Users/kristo/kristos-closet/client/closet-app/src/models/User.js",[],[],"/Users/kristo/kristos-closet/client/closet-app/src/config/aws-config.js",[],[],[],"/Users/kristo/kristos-closet/client/closet-app/src/features/selectedItemsSlice.js",[],[],{"ruleId":"105","severity":1,"message":"106","line":22,"column":9,"nodeType":"107","messageId":"108","endLine":22,"endColumn":13},{"ruleId":"105","severity":1,"message":"109","line":137,"column":11,"nodeType":"107","messageId":"108","endLine":137,"endColumn":18},"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'headers' is assigned a value but never used."]
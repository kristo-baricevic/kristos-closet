[{"/Users/kristo/kristos-closet/client/closet-app/src/index.js":"1","/Users/kristo/kristos-closet/client/closet-app/src/App.js":"2","/Users/kristo/kristos-closet/client/closet-app/src/seed.js":"3","/Users/kristo/kristos-closet/client/closet-app/src/store/store.js":"4","/Users/kristo/kristos-closet/client/closet-app/src/config/database.js":"5","/Users/kristo/kristos-closet/client/closet-app/src/store/reducers.js":"6","/Users/kristo/kristos-closet/client/closet-app/src/components/OutfitView.js":"7","/Users/kristo/kristos-closet/client/closet-app/src/components/NavBar.js":"8","/Users/kristo/kristos-closet/client/closet-app/src/components/LoginModal.js":"9","/Users/kristo/kristos-closet/client/closet-app/src/components/ImageUploader.js":"10","/Users/kristo/kristos-closet/client/closet-app/src/components/RegistrationModal.js":"11","/Users/kristo/kristos-closet/client/closet-app/src/store/actions.js":"12","/Users/kristo/kristos-closet/client/closet-app/src/components/ClosetView.js":"13","/Users/kristo/kristos-closet/client/closet-app/src/components/DemoButton.js":"14","/Users/kristo/kristos-closet/client/closet-app/src/features/userSlice.js":"15","/Users/kristo/kristos-closet/client/closet-app/src/controllers/authService.js":"16","/Users/kristo/kristos-closet/client/closet-app/src/models/User.js":"17","/Users/kristo/kristos-closet/client/closet-app/src/config/aws-config.js":"18","/Users/kristo/kristos-closet/client/closet-app/src/features/selectedItemsSlice.js":"19"},{"size":402,"mtime":1692212115773,"results":"20","hashOfConfig":"21"},{"size":4677,"mtime":1692644666632,"results":"22","hashOfConfig":"21"},{"size":661,"mtime":1691848643550,"results":"23","hashOfConfig":"21"},{"size":586,"mtime":1692642661116,"results":"24","hashOfConfig":"21"},{"size":1184,"mtime":1691848643548,"results":"25","hashOfConfig":"21"},{"size":2028,"mtime":1692022958419,"results":"26","hashOfConfig":"21"},{"size":4603,"mtime":1692642666211,"results":"27","hashOfConfig":"21"},{"size":1231,"mtime":1691848643547,"results":"28","hashOfConfig":"21"},{"size":1963,"mtime":1691959801107,"results":"29","hashOfConfig":"21"},{"size":2957,"mtime":1692223309936,"results":"30","hashOfConfig":"21"},{"size":2442,"mtime":1691848643548,"results":"31","hashOfConfig":"21"},{"size":5056,"mtime":1692223386961,"results":"32","hashOfConfig":"21"},{"size":9367,"mtime":1692545717196,"results":"33","hashOfConfig":"21"},{"size":380,"mtime":1691848643547,"results":"34","hashOfConfig":"21"},{"size":676,"mtime":1691966146981,"results":"35","hashOfConfig":"21"},{"size":1042,"mtime":1691849993800,"results":"36","hashOfConfig":"21"},{"size":907,"mtime":1691848643550,"results":"37","hashOfConfig":"21"},{"size":203,"mtime":1692210943302,"results":"38","hashOfConfig":"21"},{"size":2147,"mtime":1692644666634,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lkshuj",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kristo/kristos-closet/client/closet-app/src/index.js",[],[],"/Users/kristo/kristos-closet/client/closet-app/src/App.js",["101"],[],"/Users/kristo/kristos-closet/client/closet-app/src/seed.js",[],[],[],"/Users/kristo/kristos-closet/client/closet-app/src/store/store.js",[],[],"/Users/kristo/kristos-closet/client/closet-app/src/config/database.js",[],[],"/Users/kristo/kristos-closet/client/closet-app/src/store/reducers.js",[],[],[],"/Users/kristo/kristos-closet/client/closet-app/src/components/OutfitView.js",[],[],"/Users/kristo/kristos-closet/client/closet-app/src/components/NavBar.js",[],[],"/Users/kristo/kristos-closet/client/closet-app/src/components/LoginModal.js",[],[],"/Users/kristo/kristos-closet/client/closet-app/src/components/ImageUploader.js",[],[],"/Users/kristo/kristos-closet/client/closet-app/src/components/RegistrationModal.js",[],[],"/Users/kristo/kristos-closet/client/closet-app/src/store/actions.js",["102"],[],"import axios from \"axios\";\n\n\n//set authentication status\nexport const setAuthentication = (isAuthenticated) => ({\n    type: 'SET_AUTHENTICATION',\n    payload: isAuthenticated,\n  });\n\n//set user data\nexport const setUser = (user) => ({\n  type: 'SET_USER',\n  payload: user,\n});\n\n//clear authentication status  \nexport const clearAuthentication = () => ({\n  type: 'CLEAR_AUTHENTICATION',\n});\n  \n//manage modals\nexport const showLoginModal = () => ({\n  type: 'SET_LOGIN_MODAL_VISIBLE',\n  payload: true,\n});\n  \nexport const closeLoginModal = () => ({\n  type: 'SET_LOGIN_MODAL_VISIBLE',\n  payload: false,\n});\n  \nexport const showRegistrationModal = () => ({\n  type: 'SET_REGISTRATION_MODAL_VISIBLE',\n  payload: true,\n});\n  \nexport const closeRegistrationModal = () => ({\n  type: 'SET_REGISTRATION_MODAL_VISIBLE',\n  payload: false,\n});\n\nexport const setRegistrationModalVisible = (visible) => ({\n  type: 'SET_REGISTRATION_MODAL_VISIBLE',\n  payload: visible,\n});\n  \nexport const setLoginModalVisible = (visible) => ({\n  type: 'SET_LOGIN_MODAL_VISIBLE',\n  payload: visible,\n});\n\n// upload action types\nexport const UPLOAD_IMAGE_REQUEST = 'UPLOAD_IMAGE_REQUEST';\nexport const UPLOAD_IMAGE_SUCCESS = 'UPLOAD_IMAGE_SUCCESS';\nexport const UPLOAD_IMAGE_FAILURE = 'UPLOAD_IMAGE_FAILURE';\n\n// Thunk action to log in user\nexport const loginUser = (userData) => {\n  return async (dispatch) => {\n    try {\n      console.log(\"inside login try\");\n      const response = await axios.post('http://localhost:5000/api/login', userData);\n\n      if (response.status === 200) {\n        const user = response.data.user;\n        const token = response.data.token; \n        console.log(\"user data\", user);\n        console.log(\"token\", token);\n\n        // Set the token in client storage\n        localStorage.setItem('token', token);\n\n        console.log(\"client side token\", token);\n\n        dispatch(loginSuccess(user));\n        return console.log(user);\n      }\n    } catch (error) {\n      dispatch({\n        type: 'LOGIN_USER_ERROR',\n        payload: error.message,\n      });        \n    }\n  };\n};\n\n  \n// action creator fo successful login\nexport const loginSuccess = (user) => ({\n  type: 'LOGIN_USER_SUCCESS',\n  payload: user,\n});\n\n// action creator fo successful logout\nexport const logoutUser = () => ({\n  type: 'LOGOUT_USER', \n});\n\n// Thunk action to register user\nexport const registerUser = (userData) => {\n  console.log(\"registerUser has run\");\n  return async (dispatch) => {\n    try {\n      console.log(\"userData about to post\");\n      const response = await axios.post('http://localhost:5000/api/register', userData);\n      console.log(\"userData posted\");\n  \n      if (response.status === 201) {\n        dispatch({\n          type: 'REGISTER_USER_SUCCESS',\n          payload: response.data,\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: 'REGISTER_USER_ERROR',\n        payload: error.message,\n      });\n    }\n  };\n};\n\n// Thunk action to perform anonymous login\nexport const loginAnonymous = () => async (dispatch) => {\n  try {\n    const response = await axios.post('http://localhost:5000/api/loginAnonymous');\n    // console.log('Response data:', response.data);\n\n    const isAuthenticated = response.data.isAuthenticated;\n    const user = response.data.user;\n    const token = response.data.token;\n\n    // Save token in local storage\n    localStorage.setItem('token', token);\n\n    // Include JWT token\n    const headers = {\n      Authorization: `Bearer ${token}`,\n    };\n  \n    // Dispatch actions to update the Redux store\n    dispatch({ type: 'SET_AUTHENTICATION', payload: isAuthenticated });\n    dispatch({ type: 'SET_USER', payload: user });\n  } catch (error) {\n    // Handle login error\n    console.error('Login failed:', error);\n  }\n};\n\n// Action creators for image upload\nexport const uploadImageRequest = () => ({\n  type: UPLOAD_IMAGE_REQUEST,\n});\n\nexport const uploadImageSuccess = () => ({\n  type: UPLOAD_IMAGE_SUCCESS,\n});\n\nexport const uploadImageFailure = error => ({\n  type: UPLOAD_IMAGE_FAILURE,\n  error,\n});\n\n// Thunk action to upload an image and metadata\nexport const uploadImageAndMetaData = (imageFile, dbFormData) => async (dispatch) => {\n  dispatch(uploadImageRequest());\n  console.log(\"inside action for upload\");\n  try {\n    const token = localStorage.getItem('token');\n    const headers = {\n      'Authorization': `Bearer ${token}`,\n    };\n\n    console.log(\"form data in actions\",dbFormData);\n    console.log(\"imageFile in the actions\", imageFile);\n    \n    // Combine the data for both requests\n    const combinedFormData = new FormData();\n    combinedFormData.append('imageFile', imageFile);\n    for (const [key, value] of dbFormData.entries()) {\n      combinedFormData.append(key, value);\n    }\n\n    console.log(\"combined form data\", combinedFormData);\n\n    // Upload data to backend\n    const uploadPromise = axios.post('http://localhost:5000/api/upload', combinedFormData, { headers });\n\n    await uploadPromise;\n\n    dispatch(uploadImageSuccess());\n  } catch (error) {\n    dispatch(uploadImageFailure(error));\n  }\n};\n","/Users/kristo/kristos-closet/client/closet-app/src/components/ClosetView.js",[],[],"/Users/kristo/kristos-closet/client/closet-app/src/components/DemoButton.js",[],[],"/Users/kristo/kristos-closet/client/closet-app/src/features/userSlice.js",[],[],"/Users/kristo/kristos-closet/client/closet-app/src/controllers/authService.js",[],[],"/Users/kristo/kristos-closet/client/closet-app/src/models/User.js",[],[],"/Users/kristo/kristos-closet/client/closet-app/src/config/aws-config.js",[],[],[],"/Users/kristo/kristos-closet/client/closet-app/src/features/selectedItemsSlice.js",[],[],{"ruleId":"103","severity":1,"message":"104","line":22,"column":9,"nodeType":"105","messageId":"106","endLine":22,"endColumn":13},{"ruleId":"103","severity":1,"message":"107","line":137,"column":11,"nodeType":"105","messageId":"106","endLine":137,"endColumn":18},"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'headers' is assigned a value but never used."]